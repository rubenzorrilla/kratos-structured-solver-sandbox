import math
import numpy

def CalculateRightHandSide(a, b, c, mu, rho, v, p, f, acc, v_conv, stab_c1 = 4.0, stab_c2 = 2.0):
    RHS = numpy.empty(8)
    cRHS0 = 0.211324865405187*v[3,0]
    cRHS1 = 0.788675134594813*v[1,0]
    cRHS2 = 0.788675134594813*v[0,0] - 0.211324865405187*v[2,0]
    cRHS3 = cRHS0 - cRHS1 + cRHS2
    cRHS4 = a**(-2)
    cRHS5 = 0.788675134594813*cRHS4
    cRHS6 = -cRHS3*cRHS5
    cRHS7 = 0.622008467928146*v[0,0]
    cRHS8 = 0.622008467928146*v[1,0]
    cRHS9 = 0.166666666666667*v[3,0]
    cRHS10 = -0.166666666666667*v[2,0]
    cRHS11 = cRHS10 + cRHS9
    cRHS12 = 1.0*cRHS4
    cRHS13 = cRHS12*(-cRHS11 - cRHS7 + cRHS8)
    cRHS14 = 0.788675134594813*v[3,0]
    cRHS15 = 0.211324865405187*v[1,0]
    cRHS16 = 0.211324865405187*v[0,0] - 0.788675134594813*v[2,0]
    cRHS17 = cRHS14 - cRHS15 + cRHS16
    cRHS18 = 0.211324865405187*cRHS4
    cRHS19 = -cRHS17*cRHS18
    cRHS20 = 0.0446581987385205*v[0,0]
    cRHS21 = 0.0446581987385205*v[1,0]
    cRHS22 = cRHS12*(-cRHS11 - cRHS20 + cRHS21)
    cRHS23 = -cRHS14 + cRHS15 + cRHS2
    cRHS24 = -cRHS23
    cRHS25 = b**(-2)
    cRHS26 = 0.788675134594813*cRHS25
    cRHS27 = 0.166666666666667*v[1,0]
    cRHS28 = cRHS10 + cRHS27
    cRHS29 = cRHS28 + cRHS7 - 0.622008467928146*v[3,0]
    cRHS30 = 1.0*cRHS25
    cRHS31 = -cRHS0 + cRHS1 + cRHS16
    cRHS32 = -cRHS31
    cRHS33 = 0.211324865405187*cRHS25
    cRHS34 = cRHS20 + cRHS28 - 0.0446581987385205*v[3,0]
    cRHS35 = 0.211324865405187*v[3,1]
    cRHS36 = 0.788675134594813*v[1,1]
    cRHS37 = 0.788675134594813*v[0,1] - 0.211324865405187*v[2,1]
    cRHS38 = cRHS35 - cRHS36 + cRHS37
    cRHS39 = -cRHS38*cRHS5
    cRHS40 = 0.622008467928146*v[0,1]
    cRHS41 = 0.622008467928146*v[1,1]
    cRHS42 = 0.166666666666667*v[3,1]
    cRHS43 = -0.166666666666667*v[2,1]
    cRHS44 = cRHS42 + cRHS43
    cRHS45 = cRHS12*(-cRHS40 + cRHS41 - cRHS44)
    cRHS46 = 0.788675134594813*v[3,1]
    cRHS47 = 0.211324865405187*v[1,1]
    cRHS48 = 0.211324865405187*v[0,1] - 0.788675134594813*v[2,1]
    cRHS49 = cRHS46 - cRHS47 + cRHS48
    cRHS50 = -cRHS18*cRHS49
    cRHS51 = 0.0446581987385205*v[0,1]
    cRHS52 = 0.0446581987385205*v[1,1]
    cRHS53 = cRHS12*(-cRHS44 - cRHS51 + cRHS52)
    cRHS54 = cRHS37 - cRHS46 + cRHS47
    cRHS55 = -cRHS54
    cRHS56 = 0.166666666666667*v[1,1]
    cRHS57 = cRHS43 + cRHS56
    cRHS58 = cRHS40 + cRHS57 - 0.622008467928146*v[3,1]
    cRHS59 = -cRHS35 + cRHS36 + cRHS48
    cRHS60 = -cRHS59
    cRHS61 = cRHS51 + cRHS57 - 0.0446581987385205*v[3,1]
    cRHS62 = -0.622008467928146*v[2,0]
    cRHS63 = 0.166666666666667*v[0,0]
    cRHS64 = cRHS63 - cRHS9
    cRHS65 = cRHS62 + cRHS64 + cRHS8
    cRHS66 = -0.0446581987385205*v[2,0]
    cRHS67 = cRHS21 + cRHS64 + cRHS66
    cRHS68 = -0.622008467928146*v[2,1]
    cRHS69 = 0.166666666666667*v[0,1]
    cRHS70 = -cRHS42 + cRHS69
    cRHS71 = cRHS41 + cRHS68 + cRHS70
    cRHS72 = -0.0446581987385205*v[2,1]
    cRHS73 = cRHS52 + cRHS70 + cRHS72
    cRHS74 = -cRHS27 + cRHS63
    cRHS75 = cRHS62 + cRHS74 + 0.622008467928146*v[3,0]
    cRHS76 = cRHS66 + cRHS74 + 0.0446581987385205*v[3,0]
    cRHS77 = -cRHS56 + cRHS69
    cRHS78 = cRHS68 + cRHS77 + 0.622008467928146*v[3,1]
    cRHS79 = cRHS72 + cRHS77 + 0.0446581987385205*v[3,1]
    RHS[0] = mu*(cRHS13 + cRHS19 + cRHS22 + cRHS24*cRHS26 - cRHS29*cRHS30 - cRHS30*cRHS34 + cRHS32*cRHS33 + cRHS6)
    RHS[1] = mu*(cRHS26*cRHS55 - cRHS30*cRHS58 - cRHS30*cRHS61 + cRHS33*cRHS60 + cRHS39 + cRHS45 + cRHS50 + cRHS53)
    RHS[2] = mu*(-cRHS13 - cRHS19 - cRHS22 + cRHS24*cRHS33 + cRHS26*cRHS32 - cRHS30*cRHS65 - cRHS30*cRHS67 - cRHS6)
    RHS[3] = mu*(cRHS26*cRHS60 - cRHS30*cRHS71 - cRHS30*cRHS73 + cRHS33*cRHS55 - cRHS39 - cRHS45 - cRHS50 - cRHS53)
    RHS[4] = mu*(cRHS12*cRHS75 + cRHS12*cRHS76 + cRHS17*cRHS5 + cRHS18*cRHS3 + cRHS23*cRHS33 + cRHS26*cRHS31 + cRHS30*cRHS65 + cRHS30*cRHS67)
    RHS[5] = mu*(cRHS12*cRHS78 + cRHS12*cRHS79 + cRHS18*cRHS38 + cRHS26*cRHS59 + cRHS30*cRHS71 + cRHS30*cRHS73 + cRHS33*cRHS54 + cRHS49*cRHS5)
    RHS[6] = -mu*(0.788675134594813*cRHS17*cRHS4 - cRHS23*cRHS26 - cRHS29*cRHS30 + 0.211324865405187*cRHS3*cRHS4 - cRHS30*cRHS34 - cRHS31*cRHS33 + 1.0*cRHS4*cRHS75 + 1.0*cRHS4*cRHS76)
    RHS[7] = -mu*(-cRHS26*cRHS54 - cRHS30*cRHS58 - cRHS30*cRHS61 - cRHS33*cRHS59 + 0.211324865405187*cRHS38*cRHS4 + 0.788675134594813*cRHS4*cRHS49 + 1.0*cRHS4*cRHS78 + 1.0*cRHS4*cRHS79)

    return RHS